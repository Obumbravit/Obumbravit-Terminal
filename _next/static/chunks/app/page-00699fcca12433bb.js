(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[974],{2054:(e,t,n)=>{Promise.resolve().then(n.bind(n,7676))},7676:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>C});var a=n(5155),o=n(2900),r=n(2115),i=n(1684),c=n(4395),s=n(4516),l=n(7434),p=n(2775),u=n(2525),m=n(3904),d=n(9947);let h={name:"OBUMBRAVIT",title:"Full-Stack Developer & iOS Specialist",experience:"6+ Years",email:"hello@obumbravit.com",github:"github.com/obumbravit",linkedin:"linkedin.com/in/obumbravit",twitter:"@obumbravit",currentRole:"Employed Full-Stack Developer",availability:"Limited (Currently employed)"},g={ios:["Swift","SwiftUI","Objective-C","UIKit"],web:["React","Next.js","TypeScript","JavaScript","HTML5","CSS3"],desktop:["Various frameworks and languages"],databases:["PostgreSQL","MongoDB","SQLite"],tools:["Git","Docker","Xcode","VS Code"]},f={ios:"iOS Development (Swift/SwiftUI)",web:"Full-Stack Web Development",desktop:"Desktop Application Development",uiux:"Modern UI/UX Design",api:"API Development & Integration",architecture:"System Architecture",performance:"Performance Optimization"},y={version:"v2.1.0",name:"OBUMBRAVIT_OS",terminal:"OBUMBRAVIT_TERMINAL"},b=["Initializing system...","Loading kernel modules...","Mounting filesystems...","Starting network services...","Loading development environment...","Initializing iOS development tools...","Starting web development stack...","Loading desktop development tools...","Establishing GitHub integration..."],v="*Generated by OBUMBRAVIT_TERMINAL*",x=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Date;return e.toISOString()},w=e=>Object.entries(e).map(e=>{let[t,n]=e;return"- **".concat(t.charAt(0).toUpperCase()+t.slice(1),"**: ").concat(n.join(", "))}).join("\n");function S(e){let t={},n=0,a=0,o="",r=0;e.forEach(e=>{n+=e.stargazers_count||0,a+=e.forks_count||0,e.language&&(t[e.language]=(t[e.language]||0)+1),(e.stargazers_count||0)>r&&(r=e.stargazers_count||0,o=e.name)});let i=e.length,c=Object.entries(t).map(e=>{let[t,n]=e;return{language:t,percentage:Math.round(n/i*100),lines:1e3*n}}).sort((e,t)=>t.percentage-e.percentage).slice(0,10),s={ios:D(t,["Swift","Objective-C"]),web:D(t,["JavaScript","TypeScript","HTML","CSS"]),desktop:D(t,["C++","C#","Java","Python"]),uiux:D(t,["CSS","SCSS","HTML"]),api:D(t,["JavaScript","TypeScript","Python","Java"]),database:D(t,["SQL","Python"]),performance:D(t,["C++","Rust","Go"]),architecture:D(t,["TypeScript","Java","Python","C++"])},l=Math.max(1,Math.floor(i/3));return{totalRepos:i,totalStars:n,totalForks:a,totalCommits:0,languages:t,topLanguages:c,skills:s,experience:l,lastCommit:new Date().toISOString(),mostActiveRepo:o}}function D(e,t){let n=0,a=0;return(Object.entries(e).forEach(e=>{let[o,r]=e;a+=r,t.some(e=>o.toLowerCase().includes(e.toLowerCase()))&&(n+=r)}),0===a)?0:Math.round(n/a*100)}class A{static generateAbout(){var e;let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=S(t);return"# About ".concat(h.name,"\n\n## Who I Am\n").concat(h.title," with ").concat(n.experience," years of calculated experience based on GitHub repository analysis. Currently employed as a professional full-stack developer at a technology company.\n\n## What I Do\nI design and develop modern applications across multiple platforms, from native iOS apps with Swift/SwiftUI to responsive web applications and desktop software. My work combines clean code with beautiful design to create products that users love.\n\n## My Approach\n- **User-First Design**: Creating interfaces that are intuitive and delightful\n- **Clean Code**: Writing maintainable, scalable, and well-documented code\n- **Modern Stack**: Using cutting-edge technologies and best practices\n- **Performance Focused**: Building fast, efficient applications\n\n## Current Focus\n- ").concat(f.ios,"\n- ").concat(f.web,"\n- ").concat(f.desktop,"\n- ").concat(f.uiux,"\n- ").concat(f.api,"\n\n## Technologies (Based on GitHub Analysis)\n").concat(w(g),"\n\n## Repository Statistics\n- **Total Repositories**: ").concat(n.totalRepos,"\n- **Total Stars**: ").concat(n.totalStars.toLocaleString(),"\n- **Most Popular Language**: ").concat((null==(e=n.topLanguages[0])?void 0:e.language)||"Not available","\n\n---\n").concat(v)}static generateResume(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=S(e);return"# ".concat(h.name," - Resume\n\n## Professional Summary\n").concat(h.title," with ").concat(t.experience," years of calculated experience based on GitHub repository analysis. Currently employed as a professional full-stack developer at a technology company.\n\n## Specializations\n- ").concat(f.ios,"\n- ").concat(f.web,"\n- ").concat(f.desktop,"\n- ").concat(f.uiux,"\n- ").concat(f.api,"\n\n## Technical Skills (Calculated from GitHub)\n").concat(Object.entries(t.skills).map(e=>{let[t,n]=e;return"- **".concat(t.charAt(0).toUpperCase()+t.slice(1)," Development**: ").concat(n,"%")}).join("\n"),"\n\n## Core Technologies\n").concat(w(g),"\n\n## Experience\n- **").concat(t.experience," years** of calculated development experience\n- **Full-Stack Development**: Building complete applications across platforms\n- **iOS Development**: Native iOS apps with modern Swift/SwiftUI\n- **Web Development**: Responsive web applications and APIs\n- **Desktop Development**: Cross-platform desktop applications\n\n## GitHub Statistics\n- **Total Repositories**: ").concat(t.totalRepos,"\n- **Total Stars**: ").concat(t.totalStars.toLocaleString(),"\n- **Total Forks**: ").concat(t.totalForks.toLocaleString(),"\n\n## Contact\n- Email: ").concat(h.email,"\n- GitHub: ").concat(h.github,"\n- LinkedIn: ").concat(h.linkedin,"\n- Twitter: ").concat(h.twitter,"\n\n---\n").concat(v)}static generateContact(){return"".concat(h.name," CONTACT INFORMATION\n=====================================\n\nEmail: ").concat(h.email,"\nGitHub: ").concat(h.github,"\nLinkedIn: ").concat(h.linkedin,"\nTwitter: ").concat(h.twitter,"\n\nProfessional Services:\n").concat(Object.values(f).map(e=>"- ".concat(e)).join("\n"),"\n\nExperience: ").concat(h.experience," Professional Development\nCurrent Status: ").concat(h.currentRole,"\nAvailability: ").concat(h.availability,"\n\nStatus: ONLINE\nLast Updated: ").concat(x())}static generateSkills(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=S(e);return"# Technical Skills\n\n## Programming Languages (Calculated from GitHub)\n".concat(t.topLanguages.map(e=>"- **".concat(e.language,"**: ").concat(e.percentage,"% (").concat(e.lines.toLocaleString()," lines estimated)")).join("\n"),"\n\n## Core Competencies (Based on Repository Analysis)\n").concat(Object.entries(t.skills).map(e=>{let[t,n]=e;return"- **".concat(t.charAt(0).toUpperCase()+t.slice(1)," Development**: ").concat(n,"%")}).join("\n"),"\n\n## Repository Statistics\n- **Total Repositories**: ").concat(t.totalRepos,"\n- **Total Stars**: ").concat(t.totalStars.toLocaleString(),"\n- **Total Forks**: ").concat(t.totalForks.toLocaleString(),"\n- **Most Popular Repo**: ").concat(t.mostActiveRepo,"\n- **Estimated Experience**: ").concat(t.experience," years\n\n## Primary Technologies\n").concat(w(g),"\n\n## Development Experience\n- **").concat(t.experience," Years** of professional development\n- **Full-Stack Development**: Building complete applications\n- **Cross-Platform Development**: iOS, Web, Desktop\n- **Modern Frameworks**: Latest technologies and best practices\n- **Performance Focused**: Optimized, scalable solutions\n\n---\n").concat(v)}static generateSystemInfo(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=S(e),n=e.sort((e,t)=>t.stargazers_count-e.stargazers_count).slice(0,5).map(e=>"  - ".concat(e.name," (").concat(e.stargazers_count," stars)")).join("\n");return"".concat(y.name," ").concat(y.version," System Information\n===============================================\n\nSystem Status: ONLINE\nUptime: ").concat(Math.floor(Date.now()/1e3)," seconds\nProfessional Status: EMPLOYED\nDevelopment Stack: ACTIVE\n\nRepository Statistics (Real-time from GitHub):\n- Total Public Repos: ").concat(t.totalRepos,"\n- Total Stars: ").concat(t.totalStars.toLocaleString(),"\n- Total Forks: ").concat(t.totalForks.toLocaleString(),"\n- Most Popular Repo: ").concat(t.mostActiveRepo,"\n- Estimated Experience: ").concat(t.experience," years\n\nTop Languages (by repository count):\n").concat(t.topLanguages.slice(0,5).map(e=>"  - ".concat(e.language,": ").concat(e.percentage,"% (").concat(e.lines.toLocaleString()," lines)")).join("\n"),"\n\nTop Repositories:\n").concat(n,"\n\nDevelopment Capabilities (Calculated from GitHub):\n").concat(Object.entries(t.skills).map(e=>{let[t,n]=e;return"- ".concat(t.charAt(0).toUpperCase()+t.slice(1)," Development: ENABLED (").concat(n,"%)")}).join("\n"),"\n\nProfessional Experience: ").concat(t.experience," years\nCurrent Role: Full-Stack Developer\nLast Analysis: ").concat(new Date().toLocaleString(),"\n\n---\n").concat(v)}static generateTerminalLog(){let e=x();return"".concat(y.terminal," LOG\n============================\n\n").concat(e," - Terminal initialized\n").concat(e," - Boot sequence completed\n").concat(e," - File system mounted\n").concat(e," - GitHub integration active\n").concat(e," - Development environment loaded\n").concat(e," - iOS tools initialized\n").concat(e," - System ready for commands\n\n---\n").concat(v)}static generateAccessLog(){let e=x();return"".concat(y.name," Access Log\n==========================\n\n").concat(e," - Terminal session started\n").concat(e," - User authentication successful\n").concat(e," - File system mounted\n").concat(e," - GitHub integration initialized\n").concat(e," - Development environment loaded\n").concat(e," - iOS tools initialized\n").concat(e," - System ready for user interaction\n\n---\n").concat(v)}static generateProfile(){return"# ".concat(y.name," Profile Configuration\n\nexport PATH=\"/usr/local/bin:$PATH\"\nexport EDITOR=\"code\"\nexport TERM=\"xterm-256color\"\nexport LANG=\"en_US.UTF-8\"\n\n# Development aliases\nalias ll='ls -la'\nalias la='ls -A'\nalias l='ls -CF'\nalias ..='cd ..'\nalias ...='cd ../..'\nalias ....='cd ../../..'\nalias dev='npm run dev'\nalias build='npm run build'\nalias start='npm start'\nalias test='npm test'\n\n# Git aliases\nalias gs='git status'\nalias ga='git add .'\nalias gc='git commit -m'\nalias gp='git push'\nalias gl='git log --oneline'\n\n# Terminal colors\nexport PS1=\"\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ \"\n\n# Welcome message\necho \"Welcome to ").concat(y.name," ").concat(y.version,'"\necho "').concat(h.title,'"\necho "Type \'help\' for available commands"\necho ""\n\n---\n').concat(v)}static generateExecutable(){return"#!/bin/bash\n# ".concat(y.terminal," Executable\n# Version: ").concat(y.version,'\n\necho "').concat(y.terminal," ").concat(y.version,'"\necho "').concat(h.title,'"\necho ""\necho "Available commands:"\necho "  ls, cd, cat, pwd, tree, clear, help, exit"\necho "  matrix - Enter the matrix (easter egg)"\necho ""\necho "Type \'help\' for detailed information"\necho ""\n\n# Start interactive terminal\nexec /bin/bash')}static generateReadme(e){let t=e.topics.join(", ")||"None",n=e.homepage?"- **Homepage**: ".concat(e.homepage):"";return"# ".concat(e.name,"\n\n").concat(e.description||"No description available.","\n\n## Repository Information\n- **Language**: ").concat(e.language||"Not specified","\n- **Stars**: ").concat(e.stargazers_count,"\n- **Forks**: ").concat(e.forks_count,"\n- **Last Updated**: ").concat(new Date(e.updated_at).toLocaleDateString(),"\n- **Topics**: ").concat(t,"\n\n## Links\n- **GitHub**: ").concat(e.html_url,"\n").concat(n,"\n\n---\n").concat(v)}static getPrimaryLanguage(e){let t=Object.entries(e.map(e=>e.language).filter(Boolean).reduce((e,t)=>(e[t]=(e[t]||0)+1,e),{})).sort((e,t)=>{let[,n]=e,[,a]=t;return a-n})[0];return t?t[0]:"Not specified"}}async function k(){console.log("\uD83D\uDD0D Starting GitHub repo fetch...");try{for(let e of["https://api.github.com/users/Obumbravit/repos?per_page=100&sort=updated","https://api.github.com/users/Obumbravit/repos?per_page=30&sort=updated","https://api.github.com/users/Obumbravit/repos?per_page=10&sort=updated"])try{console.log("\uD83D\uDCE1 Trying API endpoint: ".concat(e));let t=await fetch(e,{headers:{Accept:"application/vnd.github.v3+json","User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36"}});if(t.ok){let e=await t.json();console.log("✅ Successfully fetched repos via API:",e.length),console.log("\uD83D\uDCCB All repo names:",e.map(e=>e.name)),console.log("\uD83D\uDD00 Fork status:",e.map(e=>({name:e.name,fork:e.fork,private:e.private})));let n=e.filter(e=>!e.private);return console.log("\uD83D\uDCC1 Public repos:",n.length),console.log("\uD83D\uDCC1 Public repo names:",n.map(e=>e.name)),n.map(e=>({...e,fork:e.fork||!1}))}}catch(t){console.log("❌ API endpoint failed: ".concat(e));continue}for(let e of(console.log("\uD83D\uDD04 All API endpoints failed, trying web scraping..."),[async()=>{console.log("\uD83D\uDCC4 Trying direct profile scraping...");let e=await fetch("https://github.com/Obumbravit",{method:"GET",headers:{"User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8","Accept-Language":"en-US,en;q=0.5","Accept-Encoding":"gzip, deflate, br",DNT:"1",Connection:"keep-alive","Upgrade-Insecure-Requests":"1"}});if(!e.ok)throw Error("Profile scraping failed: ".concat(e.status));let t=await e.text();for(let e of(console.log("\uD83D\uDCC4 Profile HTML length:",t.length),[/href="\/Obumbravit\/([^"]+)"/g,/data-testid="repository-name"[^>]*>([^<]+)</g,/<a[^>]*href="\/Obumbravit\/([^"]+)"[^>]*>/g,/"\/Obumbravit\/([^"]+)"/g,/repository-name[^>]*>([^<]+)</g,/<a[^>]*href="\/Obumbravit\/([^"]+)"/g])){let n=t.match(e);if(n&&n.length>0){console.log("\uD83D\uDD0D Pattern found ".concat(n.length," matches:"),n.slice(0,5));let e=Array.from(new Set(n.map(e=>{let t=e.match(/\/Obumbravit\/([^"]+)/);return t?t[1]:null}).filter(Boolean)));if(console.log("\uD83D\uDCCB Extracted repo names:",e),e.length>0)return console.log("✅ Found repos via profile scraping:",e),e}}throw Error("No repos found in profile page")},async()=>{console.log("\uD83D\uDCC4 Trying repositories tab scraping...");let e=await fetch("https://github.com/Obumbravit?tab=repositories",{method:"GET",headers:{"User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8","Accept-Language":"en-US,en;q=0.5","Accept-Encoding":"gzip, deflate, br",DNT:"1",Connection:"keep-alive","Upgrade-Insecure-Requests":"1"}});if(!e.ok)throw Error("Repositories tab scraping failed: ".concat(e.status));let t=await e.text();for(let e of(console.log("\uD83D\uDCC4 Repositories tab HTML length:",t.length),[/<a[^>]*href="\/Obumbravit\/([^"]+)"[^>]*>/g,/data-testid="repository-name"[^>]*>([^<]+)</g,/href="\/Obumbravit\/([^"]+)"/g,/"\/Obumbravit\/([^"]+)"/g,/repository-name[^>]*>([^<]+)</g,/<a[^>]*href="\/Obumbravit\/([^"]+)"/g])){let n=t.match(e);if(n&&n.length>0){console.log("\uD83D\uDD0D Repo tab pattern found ".concat(n.length," matches:"),n.slice(0,5));let e=Array.from(new Set(n.map(e=>{let t=e.match(/\/Obumbravit\/([^"]+)/);return t?t[1]:null}).filter(Boolean)));if(console.log("\uD83D\uDCCB Repo tab extracted names:",e),e.length>0)return console.log("✅ Found repos via repositories tab:",e),e}}throw Error("No repos found in repositories tab")},async()=>{console.log("\uD83D\uDD0D Trying GitHub search...");let e=await fetch("https://api.github.com/search/repositories?q=user:Obumbravit&sort=updated&order=desc",{headers:{Accept:"application/vnd.github.v3+json","User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36"}});if(e.ok){var t;let n=(null==(t=(await e.json()).items)?void 0:t.map(e=>e.name))||[];return console.log("✅ Found repos via search:",n),n}throw Error("Search API failed")},async()=>{console.log("\uD83D\uDD0D Looking for fork indicators...");let e=await fetch("https://github.com/Obumbravit",{headers:{"User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36"}});if(e.ok){let t=await e.text();for(let e of[/forked from[^>]*>([^<]+)</g,/forked[^>]*>([^<]+)</g,/data-testid="fork-button"[^>]*>([^<]+)</g]){let n=t.match(e);if(n){console.log("\uD83D\uDD00 Found fork indicators:",n);let e=t.match(/\/Obumbravit\/([^"]+)/g);if(e){let t=Array.from(new Set(e.map(e=>e.replace("/Obumbravit/",""))));return console.log("\uD83D\uDD00 Potential fork repos:",t),t}}}}throw Error("No fork indicators found")}]))try{let t=await e();if(t&&t.length>0){let e=t.map((e,t)=>({id:t+1,name:e,description:"Repository: ".concat(e),html_url:"https://github.com/Obumbravit/".concat(e),homepage:null,language:"Unknown",stargazers_count:0,forks_count:0,updated_at:new Date().toISOString(),topics:[],private:!1,fork:!1}));return console.log("✅ Created repo objects:",e.length),e}}catch(e){console.log("❌ Strategy failed:",e);continue}console.log("\uD83D\uDD04 Trying dynamic repository discovery...");let e=[];for(let t of["portfolio","website","blog","app","project","demo","test","obumbravit-terminal","terminal","personal","resume","cv","github-io","io","site","web","frontend","backend","fullstack","fork","forked","clone","copy","duplicate"])try{(await fetch("https://github.com/Obumbravit/".concat(t),{method:"HEAD",headers:{"User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36"}})).ok&&(e.push(t),console.log("✅ Discovered repo: ".concat(t)))}catch(e){continue}if(e.length>0)return console.log("✅ Dynamic discovery found repos:",e),e.map((e,t)=>({id:t+1,name:e,description:"Repository: ".concat(e),html_url:"https://github.com/Obumbravit/".concat(e),homepage:null,language:"Unknown",stargazers_count:0,forks_count:0,updated_at:new Date().toISOString(),topics:[],private:!1,fork:!1}));throw Error("All strategies failed")}catch(e){return console.error("\uD83D\uDCA5 All GitHub fetching strategies failed:",e),console.log("\uD83D\uDD04 Using basic file system as final fallback"),[]}}async function T(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(console.log("\uD83D\uDCC1 Fetching contents for ".concat(e,"/").concat(t," (depth: ").concat(a,")")),a>n)return console.log("⚠️ Max depth reached for ".concat(e,"/").concat(t)),[];try{let o="https://api.github.com/repos/Obumbravit/".concat(e,"/contents/").concat(t),r=await fetch(o,{headers:{Accept:"application/vnd.github.v3+json","User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36"}});if(console.log("\uD83D\uDCE1 API Response for ".concat(e,"/").concat(t,":"),r.status),!r.ok)return console.error("❌ Failed to fetch contents for ".concat(e,"/").concat(t,": ").concat(r.status)),[];let i=await r.json();if(!Array.isArray(i))return console.log("\uD83D\uDCC4 Single file found: ".concat(i.name)),[{name:i.name,type:"file",path:"".concat(t,"/").concat(i.name),content:i.content?atob(i.content):void 0}];console.log("\uD83D\uDCCB Found ".concat(i.length," items in ").concat(e,"/").concat(t));let c=await Promise.all(i.map(async(o,r)=>{let i={name:o.name,type:"dir"===o.type?"directory":"file",path:"".concat(t,"/").concat(o.name),content:void 0};if("dir"===o.type){let c=t?"".concat(t,"/").concat(o.name):o.name;r>0&&await new Promise(e=>setTimeout(e,100));try{let t=await T(e,c,n,a+1);i.children=t,console.log("\uD83D\uDCC2 Fetched ".concat(t.length," items for ").concat(e,"/").concat(c))}catch(t){console.warn("⚠️ Could not fetch deeper contents for ".concat(e,"/").concat(c,":"),t),i.children=[]}}return i}));return console.log("✅ Created ".concat(c.length," nodes for ").concat(e,"/").concat(t)),c}catch(n){return console.error("\uD83D\uDCA5 Error fetching contents for ".concat(e,"/").concat(t,":"),n),[]}}async function N(e){console.log("\uD83D\uDE80 Starting aggressive fetch for ".concat(e));try{let t=await fetch("https://api.github.com/repos/Obumbravit/".concat(e),{headers:{Accept:"application/vnd.github.v3+json","User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36"}}),n="main";t.ok&&(n=(await t.json()).default_branch||"main");let a=await fetch("https://api.github.com/repos/Obumbravit/".concat(e,"/git/trees/").concat(n,"?recursive=1"),{headers:{Accept:"application/vnd.github.v3+json","User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36"}});if(a.ok){let t=(await a.json()).tree||[];console.log("\uD83C\uDF33 Found ".concat(t.length," items in tree for ").concat(e));let n=[],o=new Map;return t.forEach(e=>{let t=e.path.split("/"),n=t[t.length-1],a="tree"===e.type,r={name:n,type:a?"directory":"file",path:e.path,children:a?[]:void 0};o.set(e.path,r)}),t.forEach(e=>{let t=o.get(e.path),a=e.path.split("/");if(1===a.length)n.push(t);else{let e=a.slice(0,-1).join("/"),n=o.get(e);n&&n.children&&n.children.push(t)}}),console.log("✅ Aggressive fetch created ".concat(n.length," root nodes for ").concat(e)),n}return console.log("\uD83D\uDD04 Falling back to regular fetch for ".concat(e)),await T(e,"",20,0)}catch(t){return console.error("\uD83D\uDCA5 Error in aggressive fetch for ".concat(e,":"),t),await T(e,"",20,0)}}async function j(e,t){console.log("\uD83D\uDCC4 Fetching file content for ".concat(e,"/").concat(t));try{let n="https://api.github.com/repos/Obumbravit/".concat(e,"/contents/").concat(t),a=await fetch(n,{headers:{Accept:"application/vnd.github.v3+json","User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36"}});if(a.ok){let n=await a.json();if(n.content)return console.log("✅ Successfully fetched content via API for ".concat(e,"/").concat(t)),atob(n.content)}console.log("\uD83D\uDD04 Trying raw content for ".concat(e,"/").concat(t,"..."));let o="https://raw.githubusercontent.com/Obumbravit/".concat(e,"/main/").concat(t),r=await fetch(o,{headers:{"User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36"}});if(r.ok){let n=await r.text();return console.log("✅ Successfully fetched content via raw URL for ".concat(e,"/").concat(t)),n}let i="https://raw.githubusercontent.com/Obumbravit/".concat(e,"/master/").concat(t),c=await fetch(i,{headers:{"User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36"}});if(c.ok){let n=await c.text();return console.log("✅ Successfully fetched content via master branch for ".concat(e,"/").concat(t)),n}return console.error("❌ Failed to fetch content for ".concat(e,"/").concat(t)),null}catch(n){return console.error("\uD83D\uDCA5 Error fetching file content for ".concat(e,"/").concat(t,":"),n),null}}async function I(e){console.log("\uD83C\uDFD7️ Building complete file system with repos:",e.length);let t={name:"root",type:"directory",path:"/",children:[{name:"home",type:"directory",path:"/home",children:[{name:"obumbravit",type:"directory",path:"/home/obumbravit",children:[{name:"about.md",type:"file",path:"/home/obumbravit/about.md",content:A.generateAbout(e)},{name:"resume.md",type:"file",path:"/home/obumbravit/resume.md",content:A.generateResume(e)},{name:"contact.txt",type:"file",path:"/home/obumbravit/contact.txt",content:A.generateContact()},{name:"skills.md",type:"file",path:"/home/obumbravit/skills.md",content:A.generateSkills(e)},{name:"projects",type:"directory",path:"/home/obumbravit/projects",children:await Promise.all(e.map(async e=>{console.log("\uD83D\uDCC2 Processing repo: ".concat(e.name));try{let t=await T(e.name,"",20,0);if(console.log("✅ Fetched ".concat(t.length," items for ").concat(e.name)),t.length<5){console.log("\uD83D\uDD04 Trying aggressive fetch for ".concat(e.name,"..."));let n=await N(e.name);if(n.length>t.length)return console.log("✅ Aggressive fetch got ".concat(n.length," items for ").concat(e.name)),{name:e.name,type:"directory",path:"/home/obumbravit/projects/".concat(e.name),repo:e,children:n}}return{name:e.name,type:"directory",path:"/home/obumbravit/projects/".concat(e.name),repo:e,children:t}}catch(t){return console.error("❌ Failed to fetch contents for ".concat(e.name,":"),t),{name:e.name,type:"directory",path:"/home/obumbravit/projects/".concat(e.name),repo:e,children:[{name:"README.md",type:"file",path:"/home/obumbravit/projects/".concat(e.name,"/README.md"),content:A.generateReadme(e),repo:e}]}}}))}]}]},{name:"etc",type:"directory",path:"/etc",children:[{name:"system-info",type:"file",path:"/etc/system-info",content:A.generateSystemInfo(e)},{name:"profile",type:"file",path:"/etc/profile",content:A.generateProfile()}]},{name:"var",type:"directory",path:"/var",children:[{name:"log",type:"directory",path:"/var/log",children:[{name:"terminal.log",type:"file",path:"/var/log/terminal.log",content:A.generateTerminalLog()},{name:"access.log",type:"file",path:"/var/log/access.log",content:A.generateAccessLog()}]}]},{name:"usr",type:"directory",path:"/usr",children:[{name:"local",type:"directory",path:"/usr/local",children:[{name:"bin",type:"directory",path:"/usr/local/bin",children:[{name:"obumbravit",type:"file",path:"/usr/local/bin/obumbravit",content:A.generateExecutable()}]}]}]}]};return console.log("✅ Complete file system built successfully"),t}class E{getCurrentPath(){return this.currentPath.replace(/^\/home\/obumbravit/,"~")}getParentPath(e){let t=e.split("/").filter(Boolean);return t.pop(),t.length>0?"/"+t.join("/"):"/"}resolvePath(e){return e.startsWith("~")?"~"===e?"/home/obumbravit":"/home/obumbravit"+e.slice(1):e.startsWith("/")?e:("~"===this.currentPath?"/home/obumbravit":this.currentPath)+"/"+e}addToHistory(e){this.commandHistory.push(e),this.historyIndex=this.commandHistory.length}getHistory(e){return"up"===e&&this.historyIndex>0?(this.historyIndex--,this.commandHistory[this.historyIndex]):"down"===e&&this.historyIndex<this.commandHistory.length-1?(this.historyIndex++,this.commandHistory[this.historyIndex]):null}async executeCommand(e){let t=e.trim().split(" "),n=t[0].toLowerCase(),a=t.slice(1);this.addToHistory(e);let o={ls:{name:"ls",description:"List directory contents",usage:"ls [path]",execute:this.ls.bind(this)},cd:{name:"cd",description:"Change directory",usage:"cd <path>",execute:this.cd.bind(this)},cat:{name:"cat",description:"Display file contents",usage:"cat <file>",execute:this.cat.bind(this)},pwd:{name:"pwd",description:"Print working directory",execute:this.pwd.bind(this)},tree:{name:"tree",description:"Display directory tree",usage:"tree [path]",execute:this.tree.bind(this)},matrix:{name:"matrix",description:"Enter the matrix",execute:this.matrix.bind(this)},clear:{name:"clear",description:"Clear terminal",execute:this.clear.bind(this)},reload:{name:"reload",description:"Reload filesystem from GitHub",execute:this.reload.bind(this)},help:{name:"help",description:"Show available commands",execute:this.help.bind(this)},exit:{name:"exit",description:"Exit terminal",execute:this.exit.bind(this)}}[n];if(!o)return{output:["Command not found: ".concat(n)],error:"Command not found"};try{return await o.execute(a,this.fileSystem,this.currentPath)}catch(e){return{output:["Error executing ".concat(n,": ").concat(e)],error:e}}}async ls(e,t,n){let a=[],o=[];for(let t of e)t.startsWith("-")?a.push(t):o.push(t);let r=a.includes("-a")||a.includes("--all"),i=a.includes("-l")||a.includes("--long"),c=a.includes("-R")||a.includes("--recursive"),s=a.includes("-r")||a.includes("--reverse"),l=o.length>0?o:[n],p=[];for(let e=0;e<l.length;e++){let n=l[e];l.length>1&&(e>0&&p.push(""),p.push("".concat(n,":")));let a=this.resolvePath(n),o=this.findNode(a);if(!o){p.push("ls: cannot access '".concat(n,"': No such file or directory"));continue}if("directory"!==o.type){if(i){let e=o.content?o.content.length:0,t=new Date().toLocaleDateString();p.push("-rw-r--r-- 1 obumbravit obumbravit ".concat(e," ").concat(t," ").concat(o.name))}else p.push(o.name);continue}let u=o.children||[],m=r?u:u.filter(e=>!e.name.startsWith("."));r&&"/"!==n&&m.unshift({name:"..",type:"directory",path:this.getParentPath(n),children:[]});let d=m.sort((e,t)=>"directory"===e.type&&"directory"!==t.type?-1:"directory"!==e.type&&"directory"===t.type?1:e.name.localeCompare(t.name));if(s&&(d=d.reverse()),i?d.forEach(e=>{let t="file"===e.type&&e.content?e.content.length:0,n=new Date().toLocaleDateString(),a="directory"===e.type?"drwxr-xr-x":"-rw-r--r--";p.push("".concat(a," 1 ").concat("obumbravit"," ").concat("obumbravit"," ").concat(t.toString().padStart(8)," ").concat(n," ").concat(e.name))}):d.forEach(e=>{let t="directory"===e.type?"\uD83D\uDCC1":"\uD83D\uDCC4";if("directory"===e.type&&e.repo){var n;t=e.repo.fork||e.repo.name.toLowerCase().includes("fork")||(null==(n=e.repo.description)?void 0:n.toLowerCase().includes("fork"))?"\uD83D\uDD00":"\uD83D\uDCC1"}p.push("".concat(t," ").concat(e.name))}),c){for(let e of d)if("directory"===e.type&&".."!==e.name){let a="/"===n?"/".concat(e.name):"".concat(n,"/").concat(e.name),o=await this.ls([],t,a);o.output.length>0&&(p.push(""),p.push("".concat(a,":")),p.push(...o.output))}}}return{output:p}}async cd(e,t,n){let a;if(e.length>1)return{output:["cd: too many arguments"]};let o=e[0];if(!o)return this.currentPath="~",{output:[]};if("-"===o)return{output:["cd: OLDPWD not set"]};(a=(a=this.resolvePath(o)).replace(/\/+/g,"/")).endsWith("/")&&"/"!==a&&(a=a.slice(0,-1));let r=this.findNode(a);return r?"directory"!==r.type?{output:["cd: ".concat(o,": Not a directory")]}:(this.currentPath=a,{output:[]}):{output:["cd: ".concat(o,": No such file or directory")]}}async cat(e,t,n){if(0===e.length)return{output:["cat: missing file operand","Try 'cat --help' for more information."]};let a=[],o=[];for(let t of e)t.startsWith("-")?a.push(t):o.push(t);let r=a.includes("-n")||a.includes("--number"),i=a.includes("-A")||a.includes("--show-all"),c=a.includes("-s")||a.includes("--squeeze-blank");if(a.includes("--help"))return{output:["Usage: cat [OPTION]... [FILE]...","Concatenate FILE(s) to standard output.","","With no FILE, or when FILE is -, read standard input.","","  -A, --show-all           equivalent to -vET","  -n, --number             number all output lines","  -s, --squeeze-blank      suppress repeated empty output lines","      --help     display this help and exit","      --version  output version information and exit","","Examples:","  cat f - g  Output f's contents, then standard input, then g's contents.","  cat        Copy standard input to standard output."]};if(a.includes("--version"))return{output:["cat (GNU coreutils) 8.32"]};let s=[];for(let e=0;e<o.length;e++){let t=o[e];if("-"===t){s.push("cat: -: No such file or directory");continue}o.length>1&&(e>0&&s.push(""),s.push("==> ".concat(t," <==")));let n=this.resolvePath(t),a=this.findNode(n);if(!a){s.push("cat: ".concat(t,": No such file or directory"));continue}if("file"!==a.type){s.push("cat: ".concat(t,": Is a directory"));continue}let l=[],p=n.split("/"),u=p.indexOf("projects");if(-1!==u&&u+1<p.length){let e=p[u+1],t=p.slice(u+2).join("/"),n=await j(e,t);n&&(l=n.split("\n"))}if(0===l.length&&a.content&&(l=a.content.split("\n")),0===l.length){s.push("cat: ".concat(t,": File content not available"));continue}let m=l;c&&(m=m.filter((e,t,n)=>""!==e.trim()||0===t||""!==n[t-1].trim())),r&&(m=m.map((e,t)=>(t+1).toString().padStart(6)+"  "+e)),i&&(m=m.map(e=>e.replace(/\t/g,"^I").replace(/\r/g,"^M").replace(/\n/g,"$"))),s.push(...m)}return{output:s}}async pwd(e,t,n){return{output:[this.getCurrentPath()]}}async tree(e,t,n){var a;let o=[],r=[];for(let t of e)t.startsWith("-")?o.push(t):r.push(t);let i=o.includes("-a")||o.includes("--all-files");o.includes("-I")||o.includes("--gitignore");let c=null==(a=o.find(e=>e.startsWith("--max-depth=")))?void 0:a.split("=")[1],s=c?parseInt(c):void 0;if(o.includes("--help"))return{output:["tree - list contents of directories in a tree-like format.","","Usage: tree [options] [directory]","","Options:","  -a            All files are printed.","  -I pattern    Do not list files that match the given pattern.","  --max-depth=N Print directories up to N levels deep.","  --help        Display this help and exit.","  --version     Output version information and exit.","","Examples:","  tree                    # List current directory","  tree ~                  # List home directory","  tree -a                 # Show hidden files","  tree --max-depth=2      # Show only 2 levels deep"]};if(o.includes("--version"))return{output:["tree v1.8.0"]};let l=r[0]?this.resolvePath(r[0]):"~"===this.currentPath?"/home/obumbravit":this.currentPath,p=this.findNode(l);if(!p)return{output:["tree: ".concat(l,": No such file or directory")]};if("directory"!==p.type)return{output:["tree: ".concat(l,": Not a directory")]};let u=this.generateTree(p,"",!0,i,s),m=this.getTreeStats(p,i);return u.push(""),u.push("".concat(m.dirs," directories, ").concat(m.files," files")),{output:u}}async uptime(e,t,n){let a=Math.floor(Date.now()/1e3),o=Math.floor(a/3600),r=Math.floor(a%3600/60);return{output:["up ".concat(o,"h ").concat(r,"m ").concat(a%60,"s")]}}async matrix(e,t,n){return{output:["ENTERING THE MATRIX...","","Wake up, Neo...","The Matrix has you...","Follow the white rabbit.","","Knock, knock, Neo.","","The Matrix is everywhere.","It is all around us.","Even now, in this very room.","","You can see it when you look out your window.","Or when you turn on your television.","You can feel it when you go to work...","When you go to church...","When you pay your taxes.","","It is the world that has been pulled over your eyes.","To blind you from the truth.","","That you are a slave, Neo.","Like everyone else you were born into bondage.","Into a prison that you cannot taste or see or touch.","A prison for your mind.","","Unfortunately, no one can be told what the Matrix is.","You have to see it for yourself.","","This is your last chance.","After this, there is no turning back.","","You take the blue pill - the story ends,","you wake up in your bed and believe whatever you want to believe.","","You take the red pill - you stay in Wonderland","and I show you how deep the rabbit-hole goes.","","Remember: all I'm offering is the truth. Nothing more.","","MATRIX MODE ACTIVATED","Welcome to the digital world."]}}async clear(e,t,n){return{output:[]}}async reload(e,t,n){return{output:["\uD83D\uDD04 Reloading filesystem from GitHub...","\uD83D\uDCA1 Refreshing page to reload repositories...",""]}}async help(e,t,n){let a=e[0];if(a){let e={ls:["ls - list directory contents","","Usage: ls [OPTION]... [FILE]...","","Options:","  -a, --all          do not ignore entries starting with .","  -l, --long         use long listing format","  -R, --recursive    list subdirectories recursively","  -r, --reverse      reverse order while sorting","","Examples:","  ls                 # List current directory","  ls -la             # Long format with hidden files","  ls projects/       # List specific directory","  ls -R              # Recursive listing"],cd:["cd - change directory","","Usage: cd [DIRECTORY]","","Change the current directory to DIRECTORY.","If no directory is given, the value of the HOME shell variable is used.","","Examples:","  cd                 # Go to home directory","  cd projects        # Go to projects directory","  cd ..              # Go to parent directory","  cd ~/projects      # Go to projects in home directory"],cat:["cat - concatenate files and print on the standard output","","Usage: cat [OPTION]... [FILE]...","","Options:","  -n, --number       number all output lines","  -A, --show-all     equivalent to -vET","  -s, --squeeze-blank  suppress repeated empty output lines","      --help         display this help and exit","","Examples:","  cat file.txt       # Display file contents","  cat -n file.txt    # Display with line numbers","  cat file1 file2    # Display multiple files"],tree:["tree - list contents of directories in a tree-like format","","Usage: tree [OPTION]... [DIRECTORY]","","Options:","  -a                 all files are printed","  -I pattern         do not list files that match the given pattern","  --max-depth=N      print directories up to N levels deep","","Examples:","  tree               # Show current directory tree","  tree -a            # Show hidden files too","  tree --max-depth=2 # Show only 2 levels deep"]}[a];return e?{output:e}:{output:["No help available for '".concat(a,"'")]}}return{output:["Available commands:","","File System:","  ls [OPTION]... [FILE]...  - List directory contents","  cd [DIRECTORY]            - Change directory","  cat [OPTION]... [FILE]... - Display file contents","  pwd                       - Print working directory","  tree [OPTION]... [DIR]    - Display directory tree","","System:","  reload                    - Reload filesystem from GitHub","","Special:","  matrix                    - Enter the matrix (easter egg)","","Terminal:","  clear                     - Clear terminal","  help [COMMAND]            - Show help (or help for specific command)","  exit                      - Exit terminal (refresh page)","","Navigation:","  Use arrow keys for command history","  Tab completion available for commands",'  Type "help <command>" for detailed usage',"","Examples:","  ls -la                    # Long format with hidden files","  cd projects/AirDnD        # Navigate to AirDnD project","  cat -n README.md          # View README with line numbers","  tree -a --max-depth=2     # Show tree with hidden files, 2 levels deep"]}}async exit(e,t,n){return{output:["Exiting terminal..."]}}findNode(e){let t=e.split("/").filter(Boolean),n=this.fileSystem;for(let e of t){if(!n.children)return null;let t=n.children.find(t=>t.name===e);if(!t)return null;n=t}return n}generateTree(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1/0,r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,i=[],c="directory"===e.type?"\uD83D\uDCC1":"\uD83D\uDCC4";if(i.push(t+(n?"└── ":"├── ")+c+" "+e.name),e.children&&e.children.length>0&&r<o){let c=t+(n?"    ":"│   "),s=a?e.children:e.children.filter(e=>!e.name.startsWith("."));s.forEach((e,t)=>{let n=t===s.length-1;i.push(...this.generateTree(e,c,n,a,o,r+1))})}return i}getTreeStats(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=0,a=0;if("directory"===e.type){if(n++,e.children)for(let o of t?e.children:e.children.filter(e=>!e.name.startsWith("."))){let e=this.getTreeStats(o,t);n+=e.dirs,a+=e.files}}else a++;return{dirs:n,files:a}}constructor(e){this.currentPath="~",this.commandHistory=[],this.historyIndex=-1,this.fileSystem=e}}function O(e){let{isActive:t}=e,n=(0,r.useRef)(null);return((0,r.useEffect)(()=>{if(!t||!n.current)return;let e=n.current,a=e.getContext("2d");if(!a)return;let o=()=>{e.width=window.innerWidth,e.height=window.innerHeight};o(),window.addEventListener("resize",o);let r="ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789@#$%^&*()*&^%+-/~{[|`]}".split(""),i=e.width/10,c=[];for(let e=0;e<i;e++)c[e]=1;let s=setInterval(()=>{a.fillStyle="rgba(0, 0, 0, 0.04)",a.fillRect(0,0,e.width,e.height),a.fillStyle="#0F0",a.font="10px monospace";for(let t=0;t<c.length;t++){let n=r[Math.floor(Math.random()*r.length)];a.fillText(n,10*t,10*c[t]),10*c[t]>e.height&&Math.random()>.975&&(c[t]=0),c[t]++}},35);return()=>{clearInterval(s),window.removeEventListener("resize",o)}},[t]),t)?(0,a.jsx)("canvas",{ref:n,className:"fixed inset-0 pointer-events-none z-10",style:{opacity:.3}}):null}function C(){let[e,t]=(0,r.useState)(0),[n,h]=(0,r.useState)(!1),[g,f]=(0,r.useState)(""),[v,x]=(0,r.useState)(0),[w,S]=(0,r.useState)([]),[D,T]=(0,r.useState)(""),[N,j]=(0,r.useState)(!0),[C,M]=(0,r.useState)(null),[L,R]=(0,r.useState)("~"),[P,_]=(0,r.useState)(!1),[U,H]=(0,r.useState)(!1),[F,G]=(0,r.useState)(!1),[z,W]=(0,r.useState)([]),[B]=(0,r.useState)(Date.now()),K=(0,r.useRef)(null),X=(0,r.useRef)(null),V=[{text:"".concat(y.name," ").concat(y.version),delay:200},...b.map((e,t)=>({text:e,delay:200+50*t})),{text:"System ready.",delay:200},{text:"Welcome to ".concat(y.terminal),delay:150},{text:"Type 'help' for available commands",delay:100},{text:"",delay:50}];(0,r.useEffect)(()=>{let e=()=>{T(new Date().toLocaleTimeString("en-US",{hour12:!1,hour:"2-digit",minute:"2-digit",second:"2-digit"}))};e();let t=setInterval(e,1e3);return()=>clearInterval(t)},[]),(0,r.useEffect)(()=>{let e=setInterval(()=>{T(e=>e)},1e3);return()=>clearInterval(e)},[]),(0,r.useEffect)(()=>{let e=async()=>{try{console.log("\uD83D\uDCE1 Starting GitHub integration..."),H(!0);let e=await k();if(console.log("✅ Fetched repos:",e.length),0===e.length){console.log("⚠️ No repositories found, using basic file system"),S(e=>[...e,"⚠️ No GitHub repositories found","\uD83D\uDCA1 Using basic file system","\uD83D\uDCA1 Check your GitHub username or try again later",""]),H(!1);return}let t=await I(e);console.log("✅ File system built");let n=new E(t);M(n),R(n.getCurrentPath()),S(t=>[...t,"\uD83D\uDD04 GitHub integration complete!","\uD83D\uDCC1 Loaded ".concat(e.length," repositories"),"\uD83D\uDCA1 Try: ls ~/projects",""]),console.log("✅ GitHub integration complete")}catch(e){console.error("❌ GitHub integration failed:",e),S(e=>[...e,"❌ GitHub integration failed","\uD83D\uDCA1 Basic terminal still available","\uD83D\uDCA1 Try the reload command to retry",""])}finally{H(!1)}};if(n){console.log("\uD83D\uDE80 Initializing basic terminal...");let t=new E({name:"root",type:"directory",path:"/",children:[{name:"home",type:"directory",path:"/home",children:[{name:"obumbravit",type:"directory",path:"/home/obumbravit",children:[{name:"about.md",type:"file",path:"/home/obumbravit/about.md",content:A.generateAbout([]),repo:void 0},{name:"resume.md",type:"file",path:"/home/obumbravit/resume.md",content:A.generateResume([]),repo:void 0},{name:"contact.txt",type:"file",path:"/home/obumbravit/contact.txt",content:A.generateContact(),repo:void 0},{name:"skills.md",type:"file",path:"/home/obumbravit/skills.md",content:A.generateSkills(),repo:void 0},{name:"projects",type:"directory",path:"/home/obumbravit/projects",children:[{name:"README.md",type:"file",path:"/home/obumbravit/projects/README.md",content:"# Projects\n\nLoading GitHub repositories...\n\nPlease wait while we fetch your projects.",repo:void 0}]}]}]},{name:"etc",type:"directory",path:"/etc",children:[{name:"system-info",type:"file",path:"/etc/system-info",content:A.generateSystemInfo(),repo:void 0},{name:"profile",type:"file",path:"/etc/profile",content:A.generateProfile(),repo:void 0}]},{name:"var",type:"directory",path:"/var",children:[{name:"log",type:"directory",path:"/var/log",children:[{name:"terminal.log",type:"file",path:"/var/log/terminal.log",content:A.generateTerminalLog(),repo:void 0},{name:"access.log",type:"file",path:"/var/log/access.log",content:A.generateAccessLog(),repo:void 0}]}]},{name:"usr",type:"directory",path:"/usr",children:[{name:"local",type:"directory",path:"/usr/local",children:[{name:"bin",type:"directory",path:"/usr/local/bin",children:[{name:"obumbravit",type:"file",path:"/usr/local/bin/obumbravit",content:A.generateExecutable(),repo:void 0}]}]}]}]});M(t),R(t.getCurrentPath()),console.log("✅ Basic terminal initialized"),setTimeout(()=>{e()},1e3)}},[n]),(0,r.useEffect)(()=>{K.current&&(K.current.scrollTop=K.current.scrollHeight)},[w,z]),(0,r.useEffect)(()=>{if(e<V.length){let n=setTimeout(()=>{t(e+1)},V[e].delay);return()=>clearTimeout(n)}n||setTimeout(()=>h(!0),500)},[e,n]),(0,r.useEffect)(()=>{let e=setInterval(()=>{j(e=>!e)},500);return()=>clearInterval(e)},[]);let q=async e=>{if(!C)return;let t=e.toLowerCase().trim();if(S(t=>[...t,"> ".concat(e)]),"clear"===t){S([]),f(""),x(0);return}if("exit"===t)return void window.location.reload();if("reload"===t){let t=await C.executeCommand(e);if(t.output.length>0){G(!0),W([]);for(let e=0;e<t.output.length;e++)await new Promise(e=>setTimeout(e,50)),W(n=>[...n,t.output[e]]);setTimeout(()=>{G(!1),W([]),window.location.reload()},2e3)}f(""),x(0);return}"matrix"===t&&(_(!0),setTimeout(()=>_(!1),1e4));let n=await C.executeCommand(e);if(n.output.length>0){G(!0),W([]);for(let e=0;e<n.output.length;e++)await new Promise(e=>setTimeout(e,50)),W(t=>[...t,n.output[e]]),K.current&&(K.current.scrollTop=K.current.scrollHeight);G(!1),S(e=>[...e,...n.output])}R(C.getCurrentPath()),f(""),x(0)};return n?(0,a.jsxs)("div",{className:"h-screen bg-terminal-bg text-terminal-text font-mono flex flex-col safe-area overflow-hidden",children:[(0,a.jsx)(O,{isActive:P}),(0,a.jsx)("div",{className:"flex-shrink-0 responsive-padding border-b border-terminal-border professional-shadow",children:(0,a.jsx)("div",{className:"w-full",children:(0,a.jsxs)("div",{className:"flex items-center justify-between",children:[(0,a.jsxs)("div",{className:"flex items-center space-x-3 sm:space-x-4",children:[(0,a.jsxs)("div",{className:"flex items-center space-x-1 sm:space-x-2",children:[(0,a.jsx)("div",{className:"w-2 h-2 sm:w-3 sm:h-3 bg-red-400 rounded-full"}),(0,a.jsx)("div",{className:"w-2 h-2 sm:w-3 sm:h-3 bg-yellow-400 rounded-full"}),(0,a.jsx)("div",{className:"w-2 h-2 sm:w-3 sm:h-3 bg-green-400 rounded-full"})]}),(0,a.jsxs)("div",{className:"flex items-center space-x-2",children:[(0,a.jsx)(i.A,{className:"w-4 h-4 sm:w-5 sm:h-5 text-terminal-accent"}),(0,a.jsx)("span",{className:"text-sm sm:text-lg font-bold text-terminal-accent",children:"OBUMBRAVIT_TERMINAL"})]})]}),(0,a.jsxs)("div",{className:"flex items-center space-x-2 sm:space-x-4 text-xs sm:text-sm",children:[(0,a.jsx)("span",{className:"text-terminal-muted",children:D}),U&&(0,a.jsx)("span",{className:"text-terminal-accent animate-pulse",children:"\uD83D\uDD04 Loading GitHub..."})]})]})})}),(0,a.jsx)("div",{className:"flex-1 overflow-hidden min-h-0",children:(0,a.jsxs)("div",{className:"h-full w-full flex flex-col",children:[(0,a.jsxs)("div",{ref:K,className:"flex-1 overflow-y-auto responsive-padding space-responsive terminal-output min-h-0 terminal-clickable",onClick:()=>{X.current&&C&&X.current.focus()},children:[w.map((e,t)=>(0,a.jsx)("div",{className:"whitespace-pre-wrap terminal-text-animate terminal-responsive",children:e},t)),F&&z.map((e,t)=>(0,a.jsx)("div",{className:"whitespace-pre-wrap text-terminal-accent terminal-text-animate terminal-responsive",children:e},"typing-".concat(t))),F&&(0,a.jsx)("div",{className:"text-terminal-accent animate-pulse",children:"_"})]}),(0,a.jsxs)("div",{className:"flex-shrink-0 responsive-padding border-t border-terminal-border professional-shadow",children:[(0,a.jsxs)("div",{className:"flex flex-col sm:flex-row items-start sm:items-center space-y-2 sm:space-y-0 sm:space-x-2",children:[(0,a.jsxs)("span",{className:"text-terminal-accent text-xs sm:text-sm whitespace-nowrap",children:["obumbravit@terminal:",C?C.getCurrentPath():L,"$"]}),(0,a.jsxs)("div",{className:"flex-1 relative w-full",children:[(0,a.jsx)("input",{ref:X,type:"text",value:g,onChange:e=>{f(e.target.value),x(e.target.selectionStart||0)},onKeyUp:e=>{x(e.target.selectionStart||0)},onKeyDown:e=>{if("Enter"===e.key)q(g);else if("ArrowUp"===e.key&&C){e.preventDefault();let t=C.getHistory("up");t&&(f(t),setTimeout(()=>{x(t.length),X.current&&X.current.setSelectionRange(t.length,t.length)},0))}else if("ArrowDown"===e.key&&C){e.preventDefault();let t=C.getHistory("down");t&&(f(t),setTimeout(()=>{x(t.length),X.current&&X.current.setSelectionRange(t.length,t.length)},0))}else if("ArrowLeft"===e.key){e.preventDefault();let t=Math.max(0,v-1);x(t),setTimeout(()=>{X.current&&X.current.setSelectionRange(t,t)},0)}else if("ArrowRight"===e.key){e.preventDefault();let t=Math.min(g.length,v+1);x(t),setTimeout(()=>{X.current&&X.current.setSelectionRange(t,t)},0)}else"Home"===e.key?(e.preventDefault(),x(0),setTimeout(()=>{X.current&&X.current.setSelectionRange(0,0)},0)):"End"===e.key&&(e.preventDefault(),x(g.length),setTimeout(()=>{X.current&&X.current.setSelectionRange(g.length,g.length)},0))},onClick:e=>{x(e.target.selectionStart||0)},onSelect:e=>{x(e.target.selectionStart||0)},className:"w-full bg-transparent text-terminal-text outline-none border-none font-mono terminal-responsive touch-friendly caret-transparent",placeholder:"",autoFocus:!0,disabled:!C}),(0,a.jsx)("span",{className:"absolute text-terminal-accent animate-pulse pointer-events-none",style:{left:"".concat(.6*v,"em"),top:"50%",transform:"translateY(-50%)"},children:N?"_":" "})]})]}),C&&(0,a.jsx)("div",{className:"mt-4 grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 xl:grid-cols-8 2xl:grid-cols-10 gap-2 sm:gap-3 md:gap-4",children:[{cmd:"ls",icon:c.A,desc:"List contents"},{cmd:"cd",icon:s.A,desc:"Change directory"},{cmd:"cat",icon:l.A,desc:"View file"},{cmd:"pwd",icon:p.A,desc:"Current path"},{cmd:"tree",icon:p.A,desc:"Directory tree"},{cmd:"clear",icon:u.A,desc:"Clear terminal"},{cmd:"reload",icon:m.A,desc:"Reload GitHub"},{cmd:"help",icon:d.A,desc:"Show commands"}].map(e=>{let{cmd:t,icon:n,desc:r}=e;return(0,a.jsxs)(o.P.button,{whileHover:{scale:1.02},whileTap:{scale:.98},onClick:()=>q(t),className:"p-2 sm:p-3 md:p-4 border border-terminal-border rounded-lg hover:bg-terminal-accent/5 hover:border-terminal-accent/30 smooth-transition professional-hover text-left touch-friendly min-h-[60px] sm:min-h-[70px] md:min-h-[80px]",children:[(0,a.jsxs)("div",{className:"flex items-center space-x-1 sm:space-x-2 mb-1",children:[(0,a.jsx)(n,{className:"w-3 h-3 sm:w-4 sm:h-4 md:w-5 md:h-5 text-terminal-accent"}),(0,a.jsx)("span",{className:"font-bold text-terminal-accent text-xs sm:text-sm md:text-base",children:t})]}),(0,a.jsx)("div",{className:"text-xs text-terminal-muted leading-tight",children:r})]},t)})}),(0,a.jsxs)("div",{className:"mt-2 sm:mt-4 flex flex-col sm:flex-row items-start sm:items-center justify-between text-xs sm:text-sm text-terminal-muted space-y-1 sm:space-y-0",children:[(0,a.jsxs)("div",{className:"flex flex-wrap items-center gap-2 sm:gap-4",children:[(0,a.jsxs)("span",{className:"text-terminal-accent",children:["Status: ",C?"ONLINE":"LOADING"]}),(0,a.jsxs)("span",{children:["Uptime: ",(()=>{let e=Math.floor((Date.now()-B)/1e3),t=Math.floor(e/60),n=Math.floor(t/60),a=Math.floor(n/24);return a>0?"".concat(a,"d ").concat(n%24,"h ").concat(t%60,"m"):n>0?"".concat(n,"h ").concat(t%60,"m ").concat(e%60,"s"):t>0?"".concat(t,"m ").concat(e%60,"s"):"".concat(e,"s")})()]}),P&&(0,a.jsx)("span",{className:"text-green-400 animate-pulse",children:"MATRIX ACTIVE"})]}),(0,a.jsxs)("div",{className:"flex flex-wrap items-center gap-2 sm:gap-4",children:[(0,a.jsx)("span",{children:"OBUMBRAVIT_OS v2.1.0"}),(0,a.jsx)("span",{className:"text-terminal-accent",children:"Development Ready"})]})]})]})]})})]}):(0,a.jsxs)("div",{className:"h-screen bg-terminal-bg text-terminal-text font-mono flex flex-col safe-area overflow-hidden",children:[(0,a.jsx)(O,{isActive:!1}),(0,a.jsx)("div",{className:"flex-shrink-0 responsive-padding border-b border-terminal-border professional-shadow",children:(0,a.jsx)("div",{className:"w-full",children:(0,a.jsxs)("div",{className:"flex items-center justify-between",children:[(0,a.jsxs)("div",{className:"flex items-center space-x-3 sm:space-x-4",children:[(0,a.jsxs)("div",{className:"flex items-center space-x-1 sm:space-x-2",children:[(0,a.jsx)("div",{className:"w-2 h-2 sm:w-3 sm:h-3 bg-red-400 rounded-full"}),(0,a.jsx)("div",{className:"w-2 h-2 sm:w-3 sm:h-3 bg-yellow-400 rounded-full"}),(0,a.jsx)("div",{className:"w-2 h-2 sm:w-3 sm:h-3 bg-green-400 rounded-full"})]}),(0,a.jsxs)("div",{className:"flex items-center space-x-2",children:[(0,a.jsx)(i.A,{className:"w-4 h-4 sm:w-5 sm:h-5 text-terminal-accent"}),(0,a.jsx)("span",{className:"text-sm sm:text-lg font-bold text-terminal-accent",children:"OBUMBRAVIT_TERMINAL"})]})]}),(0,a.jsxs)("div",{className:"flex items-center space-x-2 sm:space-x-4 text-xs sm:text-sm",children:[(0,a.jsx)("span",{className:"text-terminal-muted",children:D}),(0,a.jsx)("span",{className:"text-terminal-accent animate-pulse",children:"BOOTING..."})]})]})})}),(0,a.jsx)("div",{className:"flex-1 overflow-hidden min-h-0",children:(0,a.jsx)("div",{className:"h-full w-full flex flex-col",children:(0,a.jsx)("div",{className:"flex-1 overflow-y-auto responsive-padding space-responsive terminal-output min-h-0",children:V.slice(0,e+1).map((t,n)=>(0,a.jsxs)(o.P.div,{initial:{opacity:0,x:-20},animate:{opacity:1,x:0},transition:{duration:.3},className:"whitespace-pre-wrap terminal-text-animate terminal-responsive mb-1",children:[t.text,n===e&&N&&(0,a.jsx)("span",{className:"text-terminal-accent animate-pulse",children:"_"})]},n))})})})]})}}},e=>{e.O(0,[388,441,964,358],()=>e(e.s=2054)),_N_E=e.O()}]);