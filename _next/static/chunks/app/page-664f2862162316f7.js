(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[931],{2043:function(e,t,n){Promise.resolve().then(n.bind(n,7312))},7312:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return L}});var a=n(7437),o=n(732),i=n(2265),r=n(7444),c=n(3167),l=n(6142),s=n(6637),u=n(965),m=n(1138),p=n(4280),d=n(5479);let h={name:"OBUMBRAVIT",title:"Full-Stack Developer & iOS Specialist",experience:"6+ Years",email:"hello@obumbravit.com",github:"github.com/obumbravit",linkedin:"linkedin.com/in/obumbravit",twitter:"@obumbravit",currentRole:"Employed Full-Stack Developer",availability:"Limited (Currently employed)"},f={ios:["Swift","SwiftUI","Objective-C","UIKit"],web:["React","Next.js","TypeScript","JavaScript","HTML5","CSS3"],desktop:["Various frameworks and languages"],databases:["PostgreSQL","MongoDB","SQLite"],tools:["Git","Docker","Xcode","VS Code"]},g={ios:95,web:92,desktop:88,uiux:90,api:93,database:87,performance:89,architecture:91},y={ios:"iOS Development (Swift/SwiftUI)",web:"Full-Stack Web Development",desktop:"Desktop Application Development",uiux:"Modern UI/UX Design",api:"API Development & Integration",architecture:"System Architecture",performance:"Performance Optimization"},b={version:"v2.1.0",name:"OBUMBRAVIT_OS",terminal:"OBUMBRAVIT_TERMINAL"},v=["Initializing system...","Loading kernel modules...","Mounting filesystems...","Starting network services...","Loading development environment...","Initializing iOS development tools...","Starting web development stack...","Loading desktop development tools...","Establishing GitHub integration..."],x="*Generated by OBUMBRAVIT_TERMINAL*",D=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Date;return e.toISOString()},w=()=>Math.floor(Date.now()/1e3),S=e=>Object.entries(e).map(e=>{let[t,n]=e;return"- **".concat(t.charAt(0).toUpperCase()+t.slice(1),"**: ").concat(n,"%")}).join("\n"),C=e=>Object.entries(e).map(e=>{let[t,n]=e;return"- **".concat(t.charAt(0).toUpperCase()+t.slice(1),"**: ").concat(n.join(", "))}).join("\n"),N=e=>Object.values(e).map(e=>"- ".concat(e)).join("\n");class A{static generateAbout(){return"# About ".concat(h.name,"\n\n## Who I Am\n").concat(h.title," with ").concat(h.experience," of professional experience specializing in iOS, web, and desktop application development. Currently employed as a professional full-stack developer at a technology company.\n\n## What I Do\nI design and develop modern applications across multiple platforms, from native iOS apps with Swift/SwiftUI to responsive web applications and desktop software. My work combines clean code with beautiful design to create products that users love.\n\n## My Approach\n- **User-First Design**: Creating interfaces that are intuitive and delightful\n- **Clean Code**: Writing maintainable, scalable, and well-documented code\n- **Modern Stack**: Using cutting-edge technologies and best practices\n- **Performance Focused**: Building fast, efficient applications\n\n## Current Focus\n- ").concat(y.ios,"\n- ").concat(y.web,"\n- ").concat(y.desktop,"\n- ").concat(y.uiux,"\n- ").concat(y.api,"\n\n## Technologies\n").concat(C(f),"\n\n---\n").concat(x)}static generateResume(){return"# ".concat(h.name," - Resume\n\n## Professional Summary\n").concat(h.title," with ").concat(h.experience," of experience specializing in iOS, web, and desktop application development. Currently employed as a professional full-stack developer at a technology company.\n\n## Specializations\n- ").concat(y.ios,"\n- ").concat(y.web,"\n- ").concat(y.desktop,"\n- ").concat(y.uiux,"\n- ").concat(y.api,"\n\n## Technical Skills\n").concat(S(g),"\n\n## Core Technologies\n").concat(C(f),"\n\n## Experience\n- **").concat(h.experience,"** of professional development experience\n- **Full-Stack Development**: Building complete applications across platforms\n- **iOS Development**: Native iOS apps with modern Swift/SwiftUI\n- **Web Development**: Responsive web applications and APIs\n- **Desktop Development**: Cross-platform desktop applications\n\n## Contact\n- Email: ").concat(h.email,"\n- GitHub: ").concat(h.github,"\n- LinkedIn: ").concat(h.linkedin,"\n- Twitter: ").concat(h.twitter,"\n\n---\n").concat(x)}static generateContact(){return"".concat(h.name," CONTACT INFORMATION\n=====================================\n\nEmail: ").concat(h.email,"\nGitHub: ").concat(h.github,"\nLinkedIn: ").concat(h.linkedin,"\nTwitter: ").concat(h.twitter,"\n\nProfessional Services:\n").concat(N(y),"\n\nExperience: ").concat(h.experience," Professional Development\nCurrent Status: ").concat(h.currentRole,"\nAvailability: ").concat(h.availability,"\n\nStatus: ONLINE\nLast Updated: ").concat(D())}static generateSkills(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=Object.entries(e.map(e=>e.language).filter(Boolean).reduce((e,t)=>(e[t]=(e[t]||0)+1,e),{})).sort((e,t)=>{let[,n]=e,[,a]=t;return a-n}).slice(0,10);return"# Technical Skills\n\n## Programming Languages (From GitHub)\n".concat(t.map(e=>{let[t,n]=e;return"- **".concat(t,"**: ").concat(n," projects")}).join("\n"),"\n\n## Core Competencies\n- **iOS Development**: Native iOS apps with Swift/SwiftUI\n- **Full-Stack Web Development**: End-to-end web applications\n- **Desktop Development**: Cross-platform desktop applications\n- **UI/UX Design**: Modern, intuitive user interfaces\n- **API Development**: RESTful and GraphQL APIs\n- **Database Design**: Relational and NoSQL databases\n- **Performance Optimization**: Fast, efficient applications\n- **System Architecture**: Scalable, maintainable systems\n\n## Primary Technologies\n").concat(C(f),"\n\n## Development Experience\n- **").concat(h.experience,"** of professional development\n- **Full-Stack Development**: Building complete applications\n- **Cross-Platform Development**: iOS, Web, Desktop\n- **Modern Frameworks**: Latest technologies and best practices\n- **Performance Focused**: Optimized, scalable solutions\n\n---\n").concat(x)}static generateSystemInfo(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=e.reduce((e,t)=>e+t.stargazers_count,0),n=e.reduce((e,t)=>e+t.forks_count,0),a=this.getPrimaryLanguage(e),o=e.sort((e,t)=>t.stargazers_count-e.stargazers_count).slice(0,5).map(e=>"  - ".concat(e.name," (").concat(e.stargazers_count," stars)")).join("\n");return"".concat(b.name," ").concat(b.version," System Information\n===============================================\n\nSystem Status: ONLINE\nUptime: ").concat(w()," seconds\nProfessional Status: EMPLOYED\nDevelopment Stack: ACTIVE\n\nRepository Statistics:\n- Total Public Repos: ").concat(e.length,"\n- Total Stars: ").concat(t,"\n- Total Forks: ").concat(n,"\n- Primary Language: ").concat(a,"\n\nTop Repositories:\n").concat(o,"\n\nDevelopment Capabilities:\n- iOS Development: ENABLED (Swift/SwiftUI)\n- Web Development: ENABLED (React/Next.js)\n- Desktop Development: ENABLED\n- Full-Stack Development: ENABLED\n- UI/UX Design: ENABLED\n- API Development: ENABLED\n\nProfessional Experience: ").concat(h.experience,"\nCurrent Role: Full-Stack Developer\n\n---\n").concat(x)}static generateTerminalLog(){let e=D();return"".concat(b.terminal," LOG\n============================\n\n").concat(e," - Terminal initialized\n").concat(e," - Boot sequence completed\n").concat(e," - File system mounted\n").concat(e," - GitHub integration active\n").concat(e," - Development environment loaded\n").concat(e," - iOS tools initialized\n").concat(e," - System ready for commands\n\n---\n").concat(x)}static generateAccessLog(){let e=D();return"".concat(b.name," Access Log\n==========================\n\n").concat(e," - Terminal session started\n").concat(e," - User authentication successful\n").concat(e," - File system mounted\n").concat(e," - GitHub integration initialized\n").concat(e," - Development environment loaded\n").concat(e," - iOS tools initialized\n").concat(e," - System ready for user interaction\n\n---\n").concat(x)}static generateProfile(){return"# ".concat(b.name," Profile Configuration\n\nexport PATH=\"/usr/local/bin:$PATH\"\nexport EDITOR=\"code\"\nexport TERM=\"xterm-256color\"\nexport LANG=\"en_US.UTF-8\"\n\n# Development aliases\nalias ll='ls -la'\nalias la='ls -A'\nalias l='ls -CF'\nalias ..='cd ..'\nalias ...='cd ../..'\nalias ....='cd ../../..'\nalias dev='npm run dev'\nalias build='npm run build'\nalias start='npm start'\nalias test='npm test'\n\n# Git aliases\nalias gs='git status'\nalias ga='git add .'\nalias gc='git commit -m'\nalias gp='git push'\nalias gl='git log --oneline'\n\n# Terminal colors\nexport PS1=\"\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ \"\n\n# Welcome message\necho \"Welcome to ").concat(b.name," ").concat(b.version,'"\necho "').concat(h.title,'"\necho "Type \'help\' for available commands"\necho ""\n\n---\n').concat(x)}static generateExecutable(){return"#!/bin/bash\n# ".concat(b.terminal," Executable\n# Version: ").concat(b.version,'\n\necho "').concat(b.terminal," ").concat(b.version,'"\necho "').concat(h.title,'"\necho ""\necho "Available commands:"\necho "  ls, cd, cat, pwd, tree, clear, help, exit"\necho "  matrix - Enter the matrix (easter egg)"\necho ""\necho "Type \'help\' for detailed information"\necho ""\n\n# Start interactive terminal\nexec /bin/bash')}static generateReadme(e){let t=e.topics.join(", ")||"None",n=e.homepage?"- **Homepage**: ".concat(e.homepage):"";return"# ".concat(e.name,"\n\n").concat(e.description||"No description available.","\n\n## Repository Information\n- **Language**: ").concat(e.language||"Not specified","\n- **Stars**: ").concat(e.stargazers_count,"\n- **Forks**: ").concat(e.forks_count,"\n- **Last Updated**: ").concat(new Date(e.updated_at).toLocaleDateString(),"\n- **Topics**: ").concat(t,"\n\n## Links\n- **GitHub**: ").concat(e.html_url,"\n").concat(n,"\n\n---\n").concat(x)}static getPrimaryLanguage(e){let t=Object.entries(e.map(e=>e.language).filter(Boolean).reduce((e,t)=>(e[t]=(e[t]||0)+1,e),{})).sort((e,t)=>{let[,n]=e,[,a]=t;return a-n})[0];return t?t[0]:"Not specified"}}async function E(){console.log("\uD83D\uDD0D Starting GitHub repo fetch...");try{let e=await fetch("https://api.github.com/users/Obumbravit/repos?per_page=100&sort=updated",{headers:{Accept:"application/vnd.github.v3+json","User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36"}});if(console.log("\uD83D\uDCE1 API Response status:",e.status),e.ok){let t=await e.json();return console.log("✅ Successfully fetched repos:",t.length),console.log("\uD83D\uDCCB Repo names:",t.map(e=>e.name)),t.filter(e=>!e.private)}console.log("❌ API failed, trying scraping...");let t=await fetch("https://github.com/Obumbravit?tab=repositories"),n=(await t.text()).match(/href="\/Obumbravit\/([^"]+)"/g);if(n){let e=Array.from(new Set(n.map(e=>{var t;return null===(t=e.match(/\/Obumbravit\/([^"]+)/))||void 0===t?void 0:t[1]}).filter(Boolean)));console.log("\uD83D\uDD0D Found repos via scraping:",e);let t=e.map((e,t)=>({id:t+1,name:e,description:"Repository: ".concat(e),html_url:"https://github.com/Obumbravit/".concat(e),homepage:null,language:"Unknown",stargazers_count:0,forks_count:0,updated_at:new Date().toISOString(),topics:[],private:!1}));return console.log("✅ Created repo objects:",t.length),t}throw console.log("❌ No repos found via scraping"),Error("No repositories found")}catch(e){throw console.error("\uD83D\uDCA5 Error fetching repos:",e),e}}async function k(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";console.log("\uD83D\uDCC1 Fetching contents for ".concat(e,"/").concat(t));try{let n="https://api.github.com/repos/Obumbravit/".concat(e,"/contents/").concat(t),a=await fetch(n,{headers:{Accept:"application/vnd.github.v3+json","User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36"}});if(console.log("\uD83D\uDCE1 API Response for ".concat(e,"/").concat(t,":"),a.status),!a.ok)return console.error("❌ Failed to fetch contents for ".concat(e,"/").concat(t,": ").concat(a.status)),[];let o=await a.json();if(!Array.isArray(o))return console.log("\uD83D\uDCC4 Single file found: ".concat(o.name)),[{name:o.name,type:"file",path:"".concat(t,"/").concat(o.name),content:o.content?atob(o.content):void 0}];console.log("\uD83D\uDCCB Found ".concat(o.length," items in ").concat(e,"/").concat(t));let i=await Promise.all(o.map(async n=>{let a={name:n.name,type:"dir"===n.type?"directory":"file",path:"".concat(t,"/").concat(n.name),content:void 0};if("dir"===n.type){let o=t?"".concat(t,"/").concat(n.name):n.name;try{let t=await k(e,o);a.children=t,console.log("\uD83D\uDCC2 Fetched ".concat(t.length," items for ").concat(e,"/").concat(o))}catch(t){console.warn("⚠️ Could not fetch deeper contents for ".concat(e,"/").concat(o,":"),t),a.children=[]}}return a}));return console.log("✅ Created ".concat(i.length," nodes for ").concat(e,"/").concat(t)),i}catch(n){return console.error("\uD83D\uDCA5 Error fetching contents for ".concat(e,"/").concat(t,":"),n),[]}}async function j(e,t){console.log("\uD83D\uDCC4 Fetching file content for ".concat(e,"/").concat(t));try{let n="https://api.github.com/repos/Obumbravit/".concat(e,"/contents/").concat(t),a=await fetch(n,{headers:{Accept:"application/vnd.github.v3+json","User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36"}});if(a.ok){let n=await a.json();if(n.content)return console.log("✅ Successfully fetched content via API for ".concat(e,"/").concat(t)),atob(n.content)}console.log("\uD83D\uDD04 Trying raw content for ".concat(e,"/").concat(t,"..."));let o="https://raw.githubusercontent.com/Obumbravit/".concat(e,"/main/").concat(t),i=await fetch(o,{headers:{"User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36"}});if(i.ok){let n=await i.text();return console.log("✅ Successfully fetched content via raw URL for ".concat(e,"/").concat(t)),n}let r="https://raw.githubusercontent.com/Obumbravit/".concat(e,"/master/").concat(t),c=await fetch(r,{headers:{"User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36"}});if(c.ok){let n=await c.text();return console.log("✅ Successfully fetched content via master branch for ".concat(e,"/").concat(t)),n}return console.error("❌ Failed to fetch content for ".concat(e,"/").concat(t)),null}catch(n){return console.error("\uD83D\uDCA5 Error fetching file content for ".concat(e,"/").concat(t,":"),n),null}}async function I(e){console.log("\uD83C\uDFD7️ Building complete file system with repos:",e.length);let t={name:"root",type:"directory",path:"/",children:[{name:"home",type:"directory",path:"/home",children:[{name:"obumbravit",type:"directory",path:"/home/obumbravit",children:[{name:"about.md",type:"file",path:"/home/obumbravit/about.md",content:A.generateAbout()},{name:"resume.md",type:"file",path:"/home/obumbravit/resume.md",content:A.generateResume()},{name:"contact.txt",type:"file",path:"/home/obumbravit/contact.txt",content:A.generateContact()},{name:"skills.md",type:"file",path:"/home/obumbravit/skills.md",content:A.generateSkills(e)},{name:"projects",type:"directory",path:"/home/obumbravit/projects",children:await Promise.all(e.map(async e=>{console.log("\uD83D\uDCC2 Processing repo: ".concat(e.name));try{let t=await k(e.name);return console.log("✅ Fetched ".concat(t.length," items for ").concat(e.name)),{name:e.name,type:"directory",path:"/home/obumbravit/projects/".concat(e.name),repo:e,children:t}}catch(t){return console.error("❌ Failed to fetch contents for ".concat(e.name,":"),t),{name:e.name,type:"directory",path:"/home/obumbravit/projects/".concat(e.name),repo:e,children:[{name:"README.md",type:"file",path:"/home/obumbravit/projects/".concat(e.name,"/README.md"),content:A.generateReadme(e),repo:e}]}}}))}]}]},{name:"etc",type:"directory",path:"/etc",children:[{name:"system-info",type:"file",path:"/etc/system-info",content:A.generateSystemInfo(e)},{name:"profile",type:"file",path:"/etc/profile",content:A.generateProfile()}]},{name:"var",type:"directory",path:"/var",children:[{name:"log",type:"directory",path:"/var/log",children:[{name:"terminal.log",type:"file",path:"/var/log/terminal.log",content:A.generateTerminalLog()},{name:"access.log",type:"file",path:"/var/log/access.log",content:A.generateAccessLog()}]}]},{name:"usr",type:"directory",path:"/usr",children:[{name:"local",type:"directory",path:"/usr/local",children:[{name:"bin",type:"directory",path:"/usr/local/bin",children:[{name:"obumbravit",type:"file",path:"/usr/local/bin/obumbravit",content:A.generateExecutable()}]}]}]}]};return console.log("✅ Complete file system built successfully"),t}class T{getCurrentPath(){return this.currentPath}addToHistory(e){this.commandHistory.push(e),this.historyIndex=this.commandHistory.length}getHistory(e){return"up"===e&&this.historyIndex>0?(this.historyIndex--,this.commandHistory[this.historyIndex]):"down"===e&&this.historyIndex<this.commandHistory.length-1?(this.historyIndex++,this.commandHistory[this.historyIndex]):null}async executeCommand(e){let t=e.trim().split(" "),n=t[0].toLowerCase(),a=t.slice(1);this.addToHistory(e);let o={ls:{name:"ls",description:"List directory contents",usage:"ls [path]",execute:this.ls.bind(this)},cd:{name:"cd",description:"Change directory",usage:"cd <path>",execute:this.cd.bind(this)},cat:{name:"cat",description:"Display file contents",usage:"cat <file>",execute:this.cat.bind(this)},pwd:{name:"pwd",description:"Print working directory",execute:this.pwd.bind(this)},tree:{name:"tree",description:"Display directory tree",usage:"tree [path]",execute:this.tree.bind(this)},matrix:{name:"matrix",description:"Enter the matrix",execute:this.matrix.bind(this)},clear:{name:"clear",description:"Clear terminal",execute:this.clear.bind(this)},reload:{name:"reload",description:"Reload filesystem from GitHub",execute:this.reload.bind(this)},help:{name:"help",description:"Show available commands",execute:this.help.bind(this)},exit:{name:"exit",description:"Exit terminal",execute:this.exit.bind(this)}}[n];if(!o)return{output:["Command not found: ".concat(n)],error:"Command not found"};try{return await o.execute(a,this.fileSystem,this.currentPath)}catch(e){return{output:["Error executing ".concat(n,": ").concat(e)],error:e}}}async ls(e,t,n){let a=e[0]||n,o=this.findNode(a);if(!o)return{output:["ls: cannot access '".concat(a,"': No such file or directory")]};if("directory"!==o.type)return{output:["ls: cannot access '".concat(a,"': Not a directory")]};let i=o.children||[],r=[];return"/"!==a&&r.push("\uD83D\uDCC1 .."),i.sort((e,t)=>"directory"===e.type&&"directory"!==t.type?-1:"directory"!==e.type&&"directory"===t.type?1:e.name.localeCompare(t.name)).forEach(e=>{let t="directory"===e.type?"\uD83D\uDCC1":"\uD83D\uDCC4";r.push("".concat(t," ").concat(e.name))}),{output:r}}async cd(e,t,n){let a;let o=e[0];if(!o)return this.currentPath="/home/obumbravit",{output:[]};if(o.startsWith("/"))a=o;else if("~"===o||"~/"===o)a="/home/obumbravit";else if(o.includes("..")){let e=this.currentPath.split("/").filter(Boolean),t=o.split("/"),n=[...e];for(let e of t)if(".."===e)n.length>0&&n.pop();else{if("."===e||""===e)continue;n.push(e)}a=n.length>0?"/"+n.join("/"):"/"}else a=this.currentPath+"/"+o;let i=this.findNode(a);return i?"directory"!==i.type?{output:["cd: ".concat(o,": Not a directory")]}:(this.currentPath=a,{output:[]}):{output:["cd: ".concat(o,": No such file or directory (tried: ").concat(a,")")]}}async cat(e,t,n){let a;let o=e[0];if(!o)return{output:["cat: missing file operand"]};a=o.startsWith("/")?o:this.currentPath+"/"+o;let i=this.findNode(a);if(!i)return{output:["cat: ".concat(o,": No such file or directory")]};if("file"!==i.type)return{output:["cat: ".concat(o,": Is a directory")]};let r=a.split("/"),c=r.indexOf("projects");if(-1!==c&&c+1<r.length){let e=r[c+1],t=r.slice(c+2).join("/"),n=await j(e,t);if(n)return{output:n.split("\n")}}return i.content?{output:i.content.split("\n")}:{output:["cat: ".concat(o,": File content not available")]}}async pwd(e,t,n){return{output:[this.currentPath]}}async tree(e,t,n){let a=e[0]||n,o=this.findNode(a);return o?{output:this.generateTree(o,"",!0)}:{output:["tree: ".concat(a,": No such file or directory")]}}async uptime(e,t,n){let a=Math.floor(Date.now()/1e3);return{output:["up ".concat(Math.floor(a/3600),"h ").concat(Math.floor(a%3600/60),"m ").concat(a%60,"s")]}}async matrix(e,t,n){return{output:["ENTERING THE MATRIX...","","Wake up, Neo...","The Matrix has you...","Follow the white rabbit.","","Knock, knock, Neo.","","The Matrix is everywhere.","It is all around us.","Even now, in this very room.","","You can see it when you look out your window.","Or when you turn on your television.","You can feel it when you go to work...","When you go to church...","When you pay your taxes.","","It is the world that has been pulled over your eyes.","To blind you from the truth.","","That you are a slave, Neo.","Like everyone else you were born into bondage.","Into a prison that you cannot taste or see or touch.","A prison for your mind.","","Unfortunately, no one can be told what the Matrix is.","You have to see it for yourself.","","This is your last chance.","After this, there is no turning back.","","You take the blue pill - the story ends,","you wake up in your bed and believe whatever you want to believe.","","You take the red pill - you stay in Wonderland","and I show you how deep the rabbit-hole goes.","","Remember: all I'm offering is the truth. Nothing more.","","MATRIX MODE ACTIVATED","Welcome to the digital world."]}}async clear(e,t,n){return{output:[]}}async reload(e,t,n){return{output:["\uD83D\uDD04 Reloading filesystem from GitHub...","\uD83D\uDCA1 Refreshing page to reload repositories...",""]}}async help(e,t,n){return{output:["Available commands:","","File System:","  ls [path]          - List directory contents","  cd <path>          - Change directory (supports .. and ~)","  cat <file>         - Display file contents","  pwd                - Print working directory","  tree [path]        - Display directory tree","","System:","  reload             - Reload filesystem from GitHub","","Special:","  matrix             - Enter the matrix (easter egg)","","Terminal:","  clear              - Clear terminal","  help               - Show this help message","  exit               - Exit terminal (refresh page)","","Navigation:","  Use arrow keys for command history","  Tab completion available for commands",'  Type "help <command>" for detailed usage',"","Examples:","  cd projects/AirDnD    - Navigate to AirDnD project","  cat README.md         - View README file","  ls /home/obumbravit   - List home directory","  tree projects         - Show project structure"]}}async exit(e,t,n){return{output:["Exiting terminal..."]}}findNode(e){let t=e.split("/").filter(Boolean),n=this.fileSystem;for(let e of t){if(!n.children)return null;let t=n.children.find(t=>t.name===e);if(!t)return null;n=t}return n}generateTree(e,t,n){let a=[],o="directory"===e.type?"\uD83D\uDCC1":"\uD83D\uDCC4";if(a.push(t+(n?"└── ":"├── ")+o+" "+e.name),e.children&&e.children.length>0){let o=t+(n?"    ":"│   ");e.children.forEach((t,n)=>{let i=n===e.children.length-1;a.push(...this.generateTree(t,o,i))})}return a}constructor(e){this.currentPath="/home/obumbravit",this.commandHistory=[],this.historyIndex=-1,this.fileSystem=e}}function O(e){let{isActive:t}=e,n=(0,i.useRef)(null);return((0,i.useEffect)(()=>{if(!t||!n.current)return;let e=n.current,a=e.getContext("2d");if(!a)return;let o=()=>{e.width=window.innerWidth,e.height=window.innerHeight};o(),window.addEventListener("resize",o);let i="ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789@#$%^&*()*&^%+-/~{[|`]}".split(""),r=e.width/10,c=[];for(let e=0;e<r;e++)c[e]=1;let l=setInterval(()=>{a.fillStyle="rgba(0, 0, 0, 0.04)",a.fillRect(0,0,e.width,e.height),a.fillStyle="#0F0",a.font="10px monospace";for(let t=0;t<c.length;t++){let n=i[Math.floor(Math.random()*i.length)];a.fillText(n,10*t,10*c[t]),10*c[t]>e.height&&Math.random()>.975&&(c[t]=0),c[t]++}},35);return()=>{clearInterval(l),window.removeEventListener("resize",o)}},[t]),t)?(0,a.jsx)("canvas",{ref:n,className:"fixed inset-0 pointer-events-none z-10",style:{opacity:.3}}):null}function L(){let[e,t]=(0,i.useState)(0),[n,h]=(0,i.useState)(!1),[f,g]=(0,i.useState)(""),[y,x]=(0,i.useState)([]),[D,w]=(0,i.useState)(""),[S,C]=(0,i.useState)(!0),[N,k]=(0,i.useState)(null),[j,L]=(0,i.useState)("/home/obumbravit"),[P,M]=(0,i.useState)(!1),[R,U]=(0,i.useState)(!1),[H,F]=(0,i.useState)(!1),[_,B]=(0,i.useState)([]),G=(0,i.useRef)(null),z=[{text:"".concat(b.name," ").concat(b.version),delay:200},...v.map((e,t)=>({text:e,delay:200+50*t})),{text:"System ready.",delay:200},{text:"Welcome to ".concat(b.terminal),delay:150},{text:"Type 'help' for available commands",delay:100},{text:"",delay:50}];(0,i.useEffect)(()=>{let e=()=>{w(new Date().toLocaleTimeString("en-US",{hour12:!1,hour:"2-digit",minute:"2-digit",second:"2-digit"}))};e();let t=setInterval(e,1e3);return()=>clearInterval(t)},[]),(0,i.useEffect)(()=>{let e=async()=>{try{console.log("\uD83D\uDCE1 Starting GitHub integration..."),U(!0);let e=await E();if(console.log("✅ Fetched repos:",e.length),0===e.length){console.log("⚠️ No repositories found, using basic file system"),x(e=>[...e,"⚠️ No GitHub repositories found","\uD83D\uDCA1 Using basic file system","\uD83D\uDCA1 Check your GitHub username or try again later",""]),U(!1);return}let t=await I(e);console.log("✅ File system built");let n=new T(t);k(n),L(n.getCurrentPath()),x(t=>[...t,"\uD83D\uDD04 GitHub integration complete!","\uD83D\uDCC1 Loaded ".concat(e.length," repositories"),"\uD83D\uDCA1 Try: ls /home/obumbravit/projects",""]),console.log("✅ GitHub integration complete")}catch(e){console.error("❌ GitHub integration failed:",e),x(e=>[...e,"❌ GitHub integration failed","\uD83D\uDCA1 Basic terminal still available","\uD83D\uDCA1 Try the reload command to retry",""])}finally{U(!1)}};n&&((()=>{console.log("\uD83D\uDE80 Initializing basic terminal...");let e=new T({name:"root",type:"directory",path:"/",children:[{name:"home",type:"directory",path:"/home",children:[{name:"obumbravit",type:"directory",path:"/home/obumbravit",children:[{name:"about.md",type:"file",path:"/home/obumbravit/about.md",content:A.generateAbout(),repo:void 0},{name:"resume.md",type:"file",path:"/home/obumbravit/resume.md",content:A.generateResume(),repo:void 0},{name:"contact.txt",type:"file",path:"/home/obumbravit/contact.txt",content:A.generateContact(),repo:void 0},{name:"skills.md",type:"file",path:"/home/obumbravit/skills.md",content:A.generateSkills(),repo:void 0},{name:"projects",type:"directory",path:"/home/obumbravit/projects",children:[{name:"README.md",type:"file",path:"/home/obumbravit/projects/README.md",content:"# Projects\n\nLoading GitHub repositories...\n\nPlease wait while we fetch your projects.",repo:void 0}]}]}]},{name:"etc",type:"directory",path:"/etc",children:[{name:"system-info",type:"file",path:"/etc/system-info",content:A.generateSystemInfo(),repo:void 0},{name:"profile",type:"file",path:"/etc/profile",content:A.generateProfile(),repo:void 0}]},{name:"var",type:"directory",path:"/var",children:[{name:"log",type:"directory",path:"/var/log",children:[{name:"terminal.log",type:"file",path:"/var/log/terminal.log",content:A.generateTerminalLog(),repo:void 0},{name:"access.log",type:"file",path:"/var/log/access.log",content:A.generateAccessLog(),repo:void 0}]}]},{name:"usr",type:"directory",path:"/usr",children:[{name:"local",type:"directory",path:"/usr/local",children:[{name:"bin",type:"directory",path:"/usr/local/bin",children:[{name:"obumbravit",type:"file",path:"/usr/local/bin/obumbravit",content:A.generateExecutable(),repo:void 0}]}]}]}]});k(e),L(e.getCurrentPath()),console.log("✅ Basic terminal initialized")})(),setTimeout(()=>{e()},1e3))},[n]),(0,i.useEffect)(()=>{G.current&&(G.current.scrollTop=G.current.scrollHeight)},[y,_]),(0,i.useEffect)(()=>{if(e<z.length){let n=setTimeout(()=>{t(e+1)},z[e].delay);return()=>clearTimeout(n)}n||setTimeout(()=>h(!0),500)},[e,n]),(0,i.useEffect)(()=>{let e=setInterval(()=>{C(e=>!e)},500);return()=>clearInterval(e)},[]);let W=async e=>{if(!N)return;let t=e.toLowerCase().trim();if(x(t=>[...t,"> ".concat(e)]),"clear"===t){x([]),g("");return}if("exit"===t){window.location.reload();return}if("reload"===t){let t=await N.executeCommand(e);if(t.output.length>0){F(!0),B([]);for(let e=0;e<t.output.length;e++)await new Promise(e=>setTimeout(e,50)),B(n=>[...n,t.output[e]]);setTimeout(()=>{F(!1),B([]),window.location.reload()},2e3)}g("");return}"matrix"===t&&(M(!0),setTimeout(()=>M(!1),1e4));let n=await N.executeCommand(e);if(n.output.length>0){F(!0),B([]);for(let e=0;e<n.output.length;e++)await new Promise(e=>setTimeout(e,50)),B(t=>[...t,n.output[e]]),G.current&&(G.current.scrollTop=G.current.scrollHeight);F(!1),x(e=>[...e,...n.output])}L(N.getCurrentPath()),g("")};return n?(0,a.jsxs)("div",{className:"h-screen bg-terminal-bg text-terminal-text font-mono flex flex-col",children:[(0,a.jsx)(O,{isActive:P}),(0,a.jsx)("div",{className:"flex-shrink-0 p-4 border-b border-terminal-border",children:(0,a.jsx)("div",{className:"max-w-6xl mx-auto",children:(0,a.jsxs)("div",{className:"flex items-center justify-between",children:[(0,a.jsxs)("div",{className:"flex items-center space-x-4",children:[(0,a.jsx)(r.Z,{className:"w-5 h-5 text-terminal-accent"}),(0,a.jsx)("span",{className:"text-lg font-bold text-terminal-accent",children:"OBUMBRAVIT_TERMINAL"}),(0,a.jsx)("span",{className:"text-sm text-terminal-muted",children:D}),R&&(0,a.jsx)("span",{className:"text-xs text-terminal-accent animate-pulse",children:"\uD83D\uDD04 Loading GitHub..."})]}),(0,a.jsxs)("div",{className:"flex items-center space-x-2",children:[(0,a.jsx)("div",{className:"w-3 h-3 bg-red-400 rounded-full"}),(0,a.jsx)("div",{className:"w-3 h-3 bg-yellow-400 rounded-full"}),(0,a.jsx)("div",{className:"w-3 h-3 bg-green-400 rounded-full"})]})]})})}),(0,a.jsx)("div",{className:"flex-1 overflow-hidden",children:(0,a.jsxs)("div",{className:"h-full max-w-6xl mx-auto flex flex-col",children:[(0,a.jsxs)("div",{ref:G,className:"flex-1 overflow-y-auto p-4 space-y-2",children:[y.map((e,t)=>(0,a.jsx)("div",{className:"whitespace-pre-wrap terminal-text-animate",children:e},t)),H&&_.map((e,t)=>(0,a.jsx)("div",{className:"whitespace-pre-wrap text-terminal-accent terminal-text-animate",children:e},"typing-".concat(t))),H&&(0,a.jsx)("div",{className:"text-terminal-accent animate-pulse",children:"_"})]}),(0,a.jsxs)("div",{className:"flex-shrink-0 p-4 border-t border-terminal-border",children:[(0,a.jsxs)("div",{className:"flex items-center space-x-2",children:[(0,a.jsxs)("span",{className:"text-terminal-accent",children:["obumbravit@terminal:",j,"$"]}),(0,a.jsx)("input",{type:"text",value:f,onChange:e=>g(e.target.value),onKeyDown:e=>{if("Enter"===e.key)W(f);else if("ArrowUp"===e.key&&N){e.preventDefault();let t=N.getHistory("up");t&&g(t)}else if("ArrowDown"===e.key&&N){e.preventDefault();let t=N.getHistory("down");t&&g(t)}},className:"flex-1 bg-transparent text-terminal-text outline-none border-none font-mono",placeholder:"Type a command...",autoFocus:!0,disabled:!N}),S&&(0,a.jsx)("span",{className:"text-terminal-accent animate-pulse",children:"_"})]}),N&&(0,a.jsx)("div",{className:"mt-4 grid grid-cols-2 md:grid-cols-4 gap-4",children:[{cmd:"ls",icon:c.Z,desc:"List directory contents"},{cmd:"cd",icon:l.Z,desc:"Change directory"},{cmd:"cat",icon:s.Z,desc:"Display file contents"},{cmd:"pwd",icon:u.Z,desc:"Print working directory"},{cmd:"tree",icon:u.Z,desc:"Display directory tree"},{cmd:"clear",icon:m.Z,desc:"Clear terminal"},{cmd:"reload",icon:p.Z,desc:"Reload from GitHub"},{cmd:"help",icon:d.Z,desc:"Show available commands"}].map(e=>{let{cmd:t,icon:n,desc:i}=e;return(0,a.jsxs)(o.E.button,{whileHover:{scale:1.05},whileTap:{scale:.95},onClick:()=>W(t),className:"p-3 border border-terminal-border rounded-lg hover:bg-terminal-accent/5 hover:border-terminal-accent/30 transition-colors text-left",children:[(0,a.jsxs)("div",{className:"flex items-center space-x-2 mb-1",children:[(0,a.jsx)(n,{className:"w-4 h-4 text-terminal-accent"}),(0,a.jsx)("span",{className:"font-bold text-terminal-accent",children:t})]}),(0,a.jsx)("div",{className:"text-xs text-terminal-muted",children:i})]},t)})}),(0,a.jsxs)("div",{className:"mt-4 flex items-center justify-between text-sm text-terminal-muted",children:[(0,a.jsxs)("div",{className:"flex items-center space-x-4",children:[(0,a.jsxs)("span",{className:"text-terminal-accent",children:["Status: ",N?"ONLINE":"LOADING"]}),(0,a.jsxs)("span",{children:["Uptime: ",Math.floor(Date.now()/1e3),"s"]}),P&&(0,a.jsx)("span",{className:"text-green-400 animate-pulse",children:"MATRIX ACTIVE"})]}),(0,a.jsxs)("div",{className:"flex items-center space-x-4",children:[(0,a.jsx)("span",{children:"OBUMBRAVIT_OS v2.1.0"}),(0,a.jsx)("span",{className:"text-terminal-accent",children:"Development Ready"})]})]})]})]})})]}):(0,a.jsx)("div",{className:"min-h-screen bg-terminal-bg text-terminal-text font-mono p-4 overflow-hidden",children:(0,a.jsx)("div",{className:"max-w-4xl mx-auto",children:z.slice(0,e+1).map((t,n)=>(0,a.jsxs)(o.E.div,{initial:{opacity:0,x:-20},animate:{opacity:1,x:0},transition:{duration:.3},className:"mb-2",children:[t.text,n===e&&S&&(0,a.jsx)("span",{className:"text-terminal-accent animate-pulse",children:"_"})]},n))})})}}},function(e){e.O(0,[510,971,938,744],function(){return e(e.s=2043)}),_N_E=e.O()}]);